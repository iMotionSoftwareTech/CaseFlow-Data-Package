name: Release

on:
  push:
    branches: [ "main" ]  # allow runs in the main branch context
    tags:     [ "v*" ]    # also trigger on tag pushes

permissions:
  contents: read
  packages: write   # required to publish to GitHub Packages

jobs:
  build-and-release:
    # Only proceed on tag pushes like refs/tags/v1.0.0 or v0.1.0-alpha.1
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: meta
        shell: bash
        run: |
          RAW_REF="${GITHUB_REF##*/}"     # e.g., v0.1.0-alpha.3
          VERSION="${RAW_REF#v}"          # -> 0.1.0-alpha.3
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [[ "$VERSION" == *"-"* ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - run: dotnet restore
      - run: dotnet build --configuration Release --no-restore
      - run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Add GitHub Packages source
        run: |
          dotnet nuget add source \
            --username "${{ github.actor }}" \
            --password "${{ secrets.GITHUB_TOKEN }}" \
            --store-password-in-clear-text \
            --name "github" \
            "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Pack with tag version
        run: dotnet pack --configuration Release -p:PackageVersion=${{ steps.meta.outputs.version }} -o out

      - name: Publish to GitHub Packages
        run: dotnet nuget push "out/*.nupkg" --source "github" --skip-duplicate

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.meta.outputs.version }}
          name: ${{ steps.meta.outputs.version }}
          body: "Release ${{ steps.meta.outputs.version }}"
          prerelease: ${{ steps.meta.outputs.prerelease }}
          files: |
            out/*.nupkg
